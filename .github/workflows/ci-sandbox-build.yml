name: ci-build
"on":
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
env:
  MAIN_BRANCH: master
jobs:
  manifest_check:
    name: sandbox_manifest_check
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      buildMatrix: ${{ steps.check.outputs.buildMatrix }}
      buildRequired: ${{ steps.check.outputs.buildRequired }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ^1.14.4
    - name: install g3ops
      run: go get github.com/jbrunton/g3ops
    - name: validate workflows
      run: g3ops workflows check
    - name: check manifest
      id: check
      run: g3ops set-outputs build-matrix
  build:
    name: sandbox_build
    runs-on: ubuntu-latest
    needs: manifest_check
    if: ${{ needs.manifest_check.outputs.buildRequired == true }}
    strategy:
      matrix: ${{ fromJson(needs.manifest_check.outputs.buildMatrix) }}
    env:
      G3OPS_DOCKER_ACCESS_TOKEN: ${{ secrets.G3OPS_DOCKER_ACCESS_TOKEN }}
      G3OPS_DOCKER_USERNAME: ${{ secrets.G3OPS_DOCKER_USERNAME }}
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.G3OPS_ADMIN_ACCESS_TOKEN }}
    - uses: actions/setup-go@v2
      with:
        go-version: ^1.14.4
    - name: install g3ops
      run: go get github.com/jbrunton/g3ops
    - name: build
      run: g3ops service build ${{ matrix.service }}
    - name: commit
      run: |
        git config --global user.name 'jbrunton-ci-minion'
        git config --global user.email 'jbrunton-ci-minion@outlook.com'
        g3ops commit build ${{ matrix.service }}
        git push origin:master
